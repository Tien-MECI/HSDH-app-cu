<!DOCTYPE html>
<html>
<head>
  <title>Dashboard Kinh Doanh</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.2.0"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .filter-box { 
      margin-bottom: 20px; 
    }
    .chart-container { 
      width: 90%; 
      max-width: 1000px;  /* Kh√¥ng v∆∞·ª£t qu√° 1000px ƒë·ªÉ bi·ªÉu ƒë·ªì g·ªçn g√†ng */
      height: 400px;      /* Chi·ªÅu cao c·ªë ƒë·ªãnh */
      margin: 20px auto;
    }
    canvas {
      max-height: 100%;   /* ƒê·∫£m b·∫£o canvas kh√¥ng v∆∞·ª£t qu√° container */
    }
  </style>
</head>
<body>
  <h1 style="text-align:center;">üìä Dashboard Kinh Doanh</h1>

  <!-- B·ªô l·ªçc ch·ªçn th√°ng -->
  <div class="filter-box" style="text-align:center;">
    <form method="GET" action="/dashboard">
      <label for="month">Ch·ªçn th√°ng:</label>
      <select name="month" id="month" onchange="this.form.submit()">
        <option value="">T·∫•t c·∫£</option>
        <% for (let m = 1; m <= 12; m++) { %>
          <option value="<%= m %>" <%= selectedMonth == m ? 'selected' : '' %>>Th√°ng <%= m %></option>
        <% } %>
      </select>
    </form>
  </div>

  <!-- Bi·ªÉu ƒë·ªì doanh s·ªë -->
  <div class="chart-container">
    <canvas id="salesChart"></canvas>
  </div>

  <!-- Bi·ªÉu ƒë·ªì t·ª∑ l·ªá ƒë∆°n ch·ªët / h·ªßy -->
  <div class="chart-container" style="height: 300px;">
    <canvas id="statusChart"></canvas>
  </div>

  <script>
    const sales = <%- JSON.stringify(sales) %>;
    const soDonChot = <%= soDonChot %>;
    const soDonHuy = <%= soDonHuy %>;

    // Bar Chart: Doanh s·ªë theo nh√¢n vi√™n
    new Chart(document.getElementById("salesChart"), {
      type: "bar",
      data: {
        labels: sales.map(s => s.nhanVien),
        datasets: [{
          label: "T·ªïng doanh s·ªë",
          data: sales.map(s => s.tongDoanhSo),
          backgroundColor: "rgba(54, 162, 235, 0.7)"
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false, // Cho ph√©p ki·ªÉm so√°t chi·ªÅu cao container
        plugins: {
          datalabels: {
            color: "#000",
            anchor: "end",
            align: "top",
            font: { weight: "bold" },
            formatter: value => value.toLocaleString("vi-VN")
          }
        },
        scales: {
          y: {
            ticks: { callback: value => value.toLocaleString("vi-VN") }
          }
        }
      },
      plugins: [ChartDataLabels]
    });

    // Pie Chart: T·ª∑ l·ªá ƒë∆°n ch·ªët vs ƒë∆°n h·ªßy
    new Chart(document.getElementById("statusChart"), {
      type: "pie",
      data: {
        labels: ["ƒê∆°n ch·ªët", "ƒê∆°n h·ªßy"],
        datasets: [{
          data: [soDonChot, soDonHuy],
          backgroundColor: ["#4CAF50", "#F44336"]
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          datalabels: {
            color: "#fff",
            font: { weight: "bold" },
            formatter: (value, ctx) => {
              let total = ctx.chart.data.datasets[0].data.reduce((a, b) => a + b, 0);
              let percentage = total > 0 ? ((value / total) * 100).toFixed(1) + "%" : "0%";
              return percentage;
            }
          }
        }
      },
      plugins: [ChartDataLabels]
    });
  </script>
</body>
</html>
