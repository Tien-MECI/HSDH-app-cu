<!DOCTYPE html>
<html>
<head>
  <title>Dashboard Kinh Doanh</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.2.0"></script>
  <style>
    body { font-family: Arial, sans-serif; }
    .filter-box { text-align:center; margin-bottom: 20px; }
    .row { display: flex; flex-wrap: wrap; justify-content: center; gap: 20px; }
    .chart-container { flex: 1; min-width: 400px; max-width: 600px; height: 400px; position: relative; }
    canvas { max-height: 100%; }
  </style>
</head>
<body>
  <h1 style="text-align:center;">üìä Dashboard Kinh Doanh</h1>

  <!-- B·ªô l·ªçc th√°ng -->
  <div class="filter-box">
    <form method="GET" action="/dashboard">
      <label for="startMonth">T·ª´ th√°ng:</label>
      <select name="startMonth" id="startMonth">
        <% for (let m = 1; m <= 12; m++) { %>
          <option value="<%= m %>" <%= startMonth == m ? 'selected' : '' %>>Th√°ng <%= m %></option>
        <% } %>
      </select>
      <label for="endMonth">ƒê·∫øn th√°ng:</label>
      <select name="endMonth" id="endMonth">
        <% for (let m = 1; m <= 12; m++) { %>
          <option value="<%= m %>" <%= endMonth == m ? 'selected' : '' %>>Th√°ng <%= m %></option>
        <% } %>
      </select>
      <button type="submit">L·ªçc</button>
    </form>
  </div>

  <!-- H√†ng 1: Doanh s·ªë nh√¢n vi√™n + T·ª∑ l·ªá ƒë∆°n -->
  <div class="row">
    <div class="chart-container"><canvas id="salesChart"></canvas></div>
    <div class="chart-container"><canvas id="statusChart"></canvas></div>
  </div>

  <!-- H√†ng 2: Top s·∫£n ph·∫©m -->
  <div class="row">
    <div class="chart-container" style="max-width: 1000px;">
      <canvas id="productChart"></canvas>
    </div>
  </div>

  <script>
    const sales = <%- JSON.stringify(sales) %>;
    const soDonChot = <%= soDonChot %>;
    const soDonHuy = <%= soDonHuy %>;
    const topProducts = <%- JSON.stringify(topProducts) %>;
    const watermarkBase64 = "<%= watermarkBase64 %>";

    // Plugin th√™m watermark g√≥c d∆∞·ªõi ph·∫£i
    const watermarkPlugin = {
      id: 'watermark',
      beforeDraw: (chart) => {
        if (!watermarkBase64) return;
        const ctx = chart.ctx;
        const img = new Image();
        img.src = watermarkBase64;
        const { width, height } = chart.canvas;
        img.onload = () => {
          const size = Math.min(width, height) * 0.15;
          ctx.save();
          ctx.globalAlpha = 0.15;
          ctx.drawImage(img, width - size - 10, height - size - 10, size, size);
          ctx.restore();
        };
      }
    };

    // Bi·ªÉu ƒë·ªì doanh s·ªë theo nh√¢n vi√™n
    new Chart(document.getElementById("salesChart"), {
      type: "bar",
      data: {
        labels: sales.map(s => s.nhanVien),
        datasets: [{
          label: "T·ªïng doanh s·ªë",
          data: sales.map(s => s.tongDoanhSo),
          backgroundColor: "rgba(54, 162, 235, 0.7)"
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          title: { display: true, text: "üíº Doanh s·ªë theo nh√¢n vi√™n", font: { size: 18 } },
          datalabels: {
            color: "#000",
            anchor: "end",
            align: "top",
            clamp: true,
            font: ctx => ({ size: Math.max(10, Math.min(ctx.chart.width / sales.length * 0.3, 14)) }),
            formatter: v => v.toLocaleString("vi-VN")
          }
        },
        scales: { y: { ticks: { callback: v => v.toLocaleString("vi-VN") } } }
      },
      plugins: [ChartDataLabels, watermarkPlugin]
    });

    // Bi·ªÉu ƒë·ªì t·ª∑ l·ªá ƒë∆°n ch·ªët / h·ªßy
    new Chart(document.getElementById("statusChart"), {
      type: "pie",
      data: { labels: ["ƒê∆°n ch·ªët", "ƒê∆°n h·ªßy"], datasets: [{ data: [soDonChot, soDonHuy], backgroundColor: ["#4CAF50", "#F44336"] }] },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          title: { display: true, text: "üìä T·ª∑ l·ªá ƒë∆°n ch·ªët / h·ªßy", font: { size: 18 } },
          datalabels: {
            color: "#fff",
            font: ctx => ({ size: Math.max(10, Math.min(ctx.chart.width / 15, 14)) }),
            formatter: (v, ctx) => {
              const total = ctx.chart.data.datasets[0].data.reduce((a,b)=>a+b,0);
              return total>0 ? ((v/total)*100).toFixed(1)+"%" : "0%";
            }
          }
        }
      },
      plugins: [ChartDataLabels, watermarkPlugin]
    });

    // Bi·ªÉu ƒë·ªì Top 10 s·∫£n ph·∫©m
    new Chart(document.getElementById("productChart"), {
      type: "bar",
      data: {
        labels: topProducts.map(p => p.tenSP),
        datasets: [
          {
            label: "S·ªë l∆∞·ª£ng",
            data: topProducts.map(p => p.soLuong),
            backgroundColor: "rgba(255, 159, 64, 0.7)",
            yAxisID: "y"
          },
          {
            label: "Doanh s·ªë",
            data: topProducts.map(p => p.doanhSo),
            backgroundColor: "rgba(54, 162, 235, 0.7)",
            type: "line",
            yAxisID: "y1"
          }
        ]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          title: { display: true, text: "üèÜ Top 10 s·∫£n ph·∫©m b√°n ch·∫°y nh·∫•t", font: { size: 18 } },
          datalabels: {
            display: ctx => ctx.dataset.type !== "line",
            color: "#000",
            anchor: "end",
            align: "top",
            font: ctx => ({ size: Math.max(10, Math.min(ctx.chart.width / topProducts.length * 0.3, 14)) }),
            formatter: (v, ctx) => v + " " + (topProducts[ctx.dataIndex]?.donVi || "")
          },
          tooltip: {
            callbacks: {
              label: ctx =>
                ctx.dataset.label === "Doanh s·ªë"
                  ? ctx.parsed.y.toLocaleString("vi-VN")+" ƒë"
                  : ctx.parsed.y + " " + (topProducts[ctx.dataIndex]?.donVi || "")
            }
          }
        },
        scales: {
          y: { position: "left", title: { display: true, text: "S·ªë l∆∞·ª£ng" } },
          y1: { position: "right", grid: { drawOnChartArea: false },
                title: { display: true, text: "Doanh s·ªë (VND)" },
                ticks: { callback: v => v.toLocaleString("vi-VN") } }
        }
      },
      plugins: [ChartDataLabels, watermarkPlugin]
    });
  </script>
</body>
</html>
